plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
    id "xyz.tynn.android.sources" version "0.1.2"
    id "org.jetbrains.dokka"
}

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 31
        versionCode 1
        versionName "1.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

}

configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute module('org.hamcrest:hamcrest-core:1.3') with module('junit:junit:4.13.2')
        substitute module('org.hamcrest:hamcrest-library:1.3') with module('junit:junit:4.13.2')
    }
}


dependencies {

    api "org.jetbrains.kotlin:kotlin-stdlib:1.6.10"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'org.awaitility:awaitility:4.0.3'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    implementation 'joda-time:joda-time:2.10.12'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    implementation'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'

    implementation "androidx.security:security-crypto:1.1.0-alpha03"

}

group = 'com.github.Brand4Fans'
version = '1.0.1'


// build a jar with javadoc

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release
                // You can then customize attributes of the publication as shown below.
            }
        }
    }

}

